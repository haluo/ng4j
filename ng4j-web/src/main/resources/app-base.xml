<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.szc"/>
    <aop:aspectj-autoproxy/>

    <tx:annotation-driven transaction-manager="transactionManager"/>



    <!-- 针对myBatis的配置项 -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描me/gacl/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置
        value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件
        UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描
         -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <property name="plugins">
            <array>
                <!--分页插件-->
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.szc.core.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


    <!-- 拦截器方式配置事物 -->
    <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="add*" propagation="REQUIRED" />-->
            <!--<tx:method name="append*" propagation="REQUIRED" />-->
            <!--<tx:method name="insert*" propagation="REQUIRED" />-->
            <!--<tx:method name="save*" propagation="REQUIRED" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" />-->
            <!--<tx:method name="modify*" propagation="REQUIRED" />-->
            <!--<tx:method name="edit*" propagation="REQUIRED" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED" />-->
            <!--<tx:method name="remove*" propagation="REQUIRED" />-->
            <!--<tx:method name="repair" propagation="REQUIRED" />-->
            <!--<tx:method name="delAndRepair" propagation="REQUIRED" />-->

            <!--<tx:method name="get*" propagation="SUPPORTS" />-->
            <!--<tx:method name="find*" propagation="SUPPORTS" />-->
            <!--<tx:method name="load*" propagation="SUPPORTS" />-->
            <!--<tx:method name="search*" propagation="SUPPORTS" />-->
            <!--<tx:method name="datagrid*" propagation="SUPPORTS" />-->

            <!--<tx:method name="*" propagation="SUPPORTS" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"  ref="dataSource"/>
    </bean>

    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>

    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.szc.core.service.*</value>
                <value>com.szc.core.dao.*</value>
            </list>
        </property>
    </bean>

    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>

    <!--velocity 配置-->
    <bean name="velocityTools" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="stringUtils">
                    <bean class="org.apache.commons.lang.StringUtils"/>
                </entry>
                <entry key="stringEscapeUtils">
                    <bean class="org.apache.commons.lang.StringEscapeUtils"/>
                </entry>
                <entry key="dateUtils">
                    <bean class="org.apache.commons.lang.time.DateUtils"/>
                </entry>
                <entry key="baseUtil">
                    <bean class="com.szc.web.util.VelocityUtil"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>
    <bean id="velocityUrl" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="home" value="http://${com.szc.url.home}"/>
                <entry key="imgHome" value="${com.szc.img.http.pre}"/>
                <entry key="mode" value="${com.szc.img.http.mode}"/>
            </map>
        </constructor-arg>
    </bean>

    <bean class="com.szc.core.base.JedisClient"  init-method="init"/>
    
</beans>
